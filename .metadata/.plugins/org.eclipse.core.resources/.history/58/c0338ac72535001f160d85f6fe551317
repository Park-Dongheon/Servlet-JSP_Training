<?xml version="1.0" encoding="UTF-8"?>
<!-- XML 문서의 버전과 인코딩을 지정 -->
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd" id="WebApp_ID" version="5.0">
<!-- web-app 요소는 웹 애플리케이션의 루트 요소, namespace 및 schema 위치를 지정, 버전과 ID를 설정 -->
  <display-name>MustHaveJSP</display-name>
  <!-- display-name 요소는 웹 애플리케이션의 표시 이름을 정의 -->
  <welcome-file-list>
  <!-- <welcome-file-list 요소는 기본적으로 로드할 환영 파일(웰컴 파일)을 정의 -->
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
	<!-- welcome-file 요소는 지정된 파일들이 루트 URL 요청 시 기본적으로 제공될 파일을 순서대로 나열 -->
  </welcome-file-list>
  
  <context-param>
  <!-- context-para 요소는 서블릿 context에 대한 초기화 매개변수를 정의  -->
  	<param-name>INIT_PARAM</param-name>
	<!-- param-name 요소는 초기화 매개변수의 이름을 정의 -->
  	<param-value>web.xml에 저장한 초기화 매개변수</param-value>
	<!-- param-value 요소는 초기화 매개변수의 값을 정의 -->
  </context-param>
  
  <context-param>
  	<param-name>MySQL Driver</param-name>
	<!-- MySQL 드라이버 클래스 이름을 정의하는 초기화 매개변수 -->
  	<param-value>com.mysql.cj.jdbc.Driver</param-value>
  	<!-- MySQL 드라이버 클래스의 값 -->
  </context-param>
  
  <context-param>
  	<param-name>MySQL URL</param-name>
  	<!-- MySQL 데이터베이스 URL을 정의하는 초기화 매개변수 -->
  	<param-value>jdbc:mysql://localhost:3306/musthave</param-value>
  	<!-- MySQL 데이터베이스 연결 URL -->
  </context-param>
  
  <context-param>
  	<param-name>MySQL Id</param-name>
  	<!-- MySQL 데이터베이스 사용자 ID를 정의하는 초기화 매개변수 -->
  	<param-value>scott</param-value>
  	<!-- MySQL 데이터베이스 사용자 ID의 값 -->
  </context-param>
  
  <context-param>
  	<param-name>MySQL Pwd</param-name>
  	<!-- MySQL 데이터베이스 사용자 비밀번호를 정의하는 초기화 매개변수 -->
  	<param-value>tiger</param-value>
  	<!-- MySQL 데이터베이스 사용자 비밀번호의 값 -->
  </context-param>
  
  <session-config>
  	<session-timeout>20</session-timeout>
  </session-config>
  
  <context-param>
  	<param-name>POSTS_PER_PAGE</param-name>
  	<param-value>10</param-value>
  </context-param>
  <context-param>
  	<param-name>PAGES_PER_BLOCK</param-name>
  	<param-value>5</param-value>
  </context-param>
  
  <servlet>	<!-- 서블릿 등록 -->
  	<servlet-name>HelloServlet</servlet-name>
  	<servlet-class>servlet.HelloServlet</servlet-class>
  </servlet>
  <servlet-mapping>	<!-- 서블릿과 요청명 매핑 -->
  	<servlet-name>HelloServlet</servlet-name>
  	<url-pattern>/12Servlet/HelloServlet.do</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>DirectServletPrint</servlet-name>
  	<servlet-class>servlet.DirectServletPrint</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DirectServletPrint</servlet-name>
  	<url-pattern>/12Servlet/DirectServletPrint.do</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>MemberAuth</servlet-name>
  	<servlet-class>servlet.MemberAuth</servlet-class>
  	<init-param>
  		<param-name>admin_id</param-name>
  		<param-value>nakja</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MemberAuth</servlet-name>
  	<url-pattern>/12Servlet/MemberAuth.mvc</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>MVCBoardList</servlet-name>	<!-- 서블릿 이름 -->
  	<servlet-class>model2.mvcboard.ListController</servlet-class>	<!-- 서블릿 클래스 -->
  </servlet>
  <servlet-mapping>
  	<servlet-name>MVCBoardList</servlet-name>	<!-- 서블릿 이동 -->
  	<url-pattern>/mvcboard/list.do</url-pattern>	<!-- 요청명 -->
  </servlet-mapping>
  
   <servlet>
  	<servlet-name>MVCBoardWrite</servlet-name>	<!-- 서블릿 이름 -->
  	<servlet-class>model2.mvcboard.WriteController</servlet-class>	<!-- 서블릿 클래스 -->
  	<multipart-config>
  		<max-file-size>1048576</max-file-size>	<!-- 1MB -->
  		<max-request-size>10485760</max-request-size>	<!-- 10MB -->
  	</multipart-config>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MVCBoardWrite</servlet-name>	<!-- 서블릿 이동 -->
  	<url-pattern>/mvcboard/write.do</url-pattern>	<!-- 요청명 -->
  </servlet-mapping>
  
  <!-- 에러 코드, 특정 HTTP 에러 코드가 발생할 때 사용자 정의 에러 페이지를 지정하는 설정 -->
  <!-- error-page 요소는 특정 에러 코드에 대한 사용자 정의 에러 페이지를 정의 -->


<!--   <error-page> -->
<!--   	<error-code>404</error-code> -->
	<!-- error-code 요소는 처리할 HTTP 상태 코드를 정의 -->
	<!-- 404 에러 코드에 대한 사용자 정의 에러 페이지를 정의 -->
<!--   	<location>/02ImplicitObject/Exception.jsp</location> -->
	<!-- location 요소는 에러가 발생했을 때 보여줄 JSP 페이지의 경로를 정의 -->
<!--   </error-page> -->
  
<!--   <error-page> -->
<!--   	<error-code>405</error-code> -->
	<!-- 405 에러 코드에 대한 사용자 정의 에러 페이지를 정의 -->
<!--   	<location>/02ImplicitObject/Exception.jsp</location> -->
	<!-- 에러 발생 시 출력할 JSP 페이지 경로 -->
<!--   </error-page> -->
  
<!--   <error-page> -->
<!--   	<error-code>500</error-code> -->
  	<!-- 500 에러 코드에 대한 사용자 정의 에러 페이지를 정의 -->
<!--   	<location>/02ImplicitObject/Exception.jsp</location> -->
  	<!-- 에러 발생 시 출력할 JSP 페이지 경로 -->
<!--   </error-page> -->

</web-app>