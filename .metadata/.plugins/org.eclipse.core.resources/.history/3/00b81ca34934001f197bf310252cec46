package model2.mvcboard;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class ListController extends HttpServlet {

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		// DAO 생성
		MVCBoardDAO dao = new MVCBoardDAO();
		
		// 부에 전달할 매개변수 저장용 맵 생성
		Map<String, Object> map = new HashMap<String, Object>();
		
		String searchField = req.getParameter("searchField");
		String searchWord = req.getParameter("searchWord");

		if (searchWord != null) {
			// 쿼리스트링으로 전달받은 매개변수 중 검색어가 있다면 map에 저장
			map.put("searchField", searchField);
			map.put("searchWord", searchWord);
		}
		
		//검색 필드와 검색어의 값이 null 또는 "null"일 때 공백 문자열로 초기화
		if (searchField == null || searchField.equals("null")) {
		 searchField = "";
		}
		if (searchWord == null || searchWord.equals("null")) {
		 searchWord = "";
		}

		//만약 searchWord가 공백 문자열이라면 searchField도 초기화
		if (searchWord.equals("")) {
		 searchField = "";
		}

		int totalCount = dao.selectCount(map);	// 게시물 수 확인
		
		/*** 페이지 처리 start ***/
		// 전체 페이지 수 계산
		ServletContext application = getServletContext();
		int pageSize = Integer.parseInt(application.getInitParameter("POSTS_PER_PAGE"));
		int blockPage = Integer.parseInt(application.getInitParameter("PAGES_PER_BLOCK"));
		int totalPage = (int)Math.ceil((double)totalCount / pageSize);

		// 현재 페이지 확인
		int pageNum = 1;		// 기본값
		String pageTemp = request.getParameter("pageNum");
		if (pageTemp != null && !pageTemp.equals(""))
			pageNum = Integer.parseInt(pageTemp);			// 요청 받은 페이지로 수정
		
	}

}
